/*
 * bp-rt-antmofo-hello.h
 *
 *  Created on: 14/06/2012
 *      Author: joagf
 */

#ifndef BPRTANTMOFOHELLO_H_
#define BPRTANTMOFOHELLO_H_


#include "ns3/nstime.h"
#include "ns3/timer.h"
#include "ns3/header.h"
#include "ns3/net-device.h"
#include "ns3/ptr.h"
#include "ns3/socket.h"
#include "ns3/node.h"
#include "ns3/mac48-address.h"
#include "ns3/callback.h"
#include "ns3/traced-callback.h"

#include "bp-bundle-endpoint-id.h"
#include "bp-link-manager.h"
#include "bp-link.h"
#include "bp-bundle-protocol-agent.h"
#include "bp-convergence-layer-agent.h"
//#include "ieee754.h"
#include <iostream>
#include <string>
#include <vector>

namespace ns3 {
namespace bundleProtocol {

typedef std::vector<BundleEndpointId> Neighs;

class AntMofoHelloHeader: public Header {
public:
        AntMofoHelloHeader();
        /* adicionar n√∫mero do eid e probabilidade dos vizinhos */
        void addNeigh(const BundleEndpointId &dst_eid);
        int GetSize();
        Neighs GetNeighList();
        /* fim */

        static TypeId GetTypeId(void);
        virtual TypeId GetInstanceTypeId(void) const;
        virtual void Print(std::ostream &os) const;
        virtual uint32_t GetSerializedSize(void) const;
        virtual void Serialize(Buffer::Iterator start) const;
        virtual uint32_t Deserialize(Buffer::Iterator start);

        void SetBundleEndpointId(BundleEndpointId eid);
        BundleEndpointId GetBundleEndpointId() const;

        void setPos(double x, double y);
        void setVel(double x, double y);
        Vector2d getPos()const;
        Vector2d getVel()const;

protected:
        BundleEndpointId m_eid;
        Neighs m_nlist;
        Vector2d m_pos; // current position
        Vector2d m_vel; // velocity
};

}
}

#endif /* BPRTANTMOFOHELLO_H_ */
